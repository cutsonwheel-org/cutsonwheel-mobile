import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { take, map } from 'rxjs/operators';
import { AuthService } from '../auth/auth.service';
import { Bookings } from './bookings';
import { HttpClient } from '@angular/common/http';
import { AngularFireAuth } from '@angular/fire/auth';
import { AngularFirestoreCollection, AngularFirestore, DocumentReference } from '@angular/fire/firestore';
// import { auth } from 'firebase/app';
// declare var gapi: any;

// const hoursFromNow = (n) => new Date(Date.now() + n * 1000 * 60 * 60 ).toISOString();

@Injectable({ providedIn: 'root' })
export class BookingsService {
  private bookings: Observable<Bookings[]>;
  private bookingsCollection: AngularFirestoreCollection<Bookings>;

  // user$: Observable<firebase.User>;
  // calendarItems: any[];

  constructor(
    private authService: AuthService,
    private http: HttpClient,
    private afs: AngularFirestore,
    private angularFireAuth: AngularFireAuth
  ) {
    this.bookingsCollection = this.afs.collection<Bookings>('bookings');
  }

  // initClient() {
  //   gapi.load('client', () => {
  //     console.log('loaded client');

  //     gapi.client.init({
  //       apiKey: 'AIzaSyC1P3bJSJZpzs7cd0QoizMEkkZqCqMCFCs',
  //       clientId: '504496906586-onu8ilu9tp5ehvnmj6ogqvudlislrbkh.apps.googleusercontent.com',
  //       discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'],
  //       scope: 'https://www.googleapis.com/auth/calendar'
  //     });

  //     gapi.client.load('calendar', 'v3', () => {
  //       console.log('loaded calendar');
  //       this.getCalendar();
  //     });
  //   });
  // }

  // async getCalendar() {
  //   const events = await gapi.client.calendar.events.list({
  //     calendarId: 'primary',
  //     timeMin: new Date().toISOString(),
  //     showDeleted: false,
  //     singleEvents: true,
  //     maxResults: 10,
  //     orderBy: 'startTime'
  //   });

  //   console.log(events);

  //   this.calendarItems = events.result.items;
  // }

  // async insertEvent() {
  //   const insert = await gapi.client.calendar.events.insert({
  //     calendarId: 'primary',
  //     start: {
  //       dateTime: hoursFromNow(2),
  //       timeZone: 'UTC +8'
  //     },
  //     end: {
  //       dateTime: hoursFromNow(3),
  //       timeZone: 'UTC +8'
  //     },
  //     summary: 'test cutsonwheel',
  //     description: 'Do some cool stuff and have fun.'
  //   });
  //   await this.getCalendar();
  // }

}
=================
if client
  how discovery
else
  show bookings
